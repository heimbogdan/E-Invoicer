<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ro.helator</groupId>
	<artifactId>einvoicer</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>E-Invoicer</name>

	<repositories>
		<repository>
			<id>openmrs-repo</id>
			<name>ThirdParty</name>
			<url>http://mavenrepo.openmrs.org/nexus/content/repositories/thirdparty/</url>
		</repository>
	</repositories>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<javafx.version>2.2</javafx.version>
		<exec.mainClass>ro.helator.einvoicer.app.Main</exec.mainClass>
		<spring.version>4.2.1.RELEASE</spring.version>
		<external.lib.folder>C:\Work\eclipse\jee-neon\workspaces\Personal\SelfCheckIn\libs</external.lib.folder>
	</properties>

	<dependencies>
		<dependency>
			<groupId>javafx</groupId>
			<artifactId>jfxrt</artifactId>
			<version>${javafx.version}</version>
			<scope>system</scope>
			<systemPath>${java.home}\lib\ext\jfxrt.jar</systemPath>
		</dependency>

		<!-- Spring -->

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>1.2.9</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-remoting</artifactId>
			<version>1.2.9</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-support</artifactId>
			<version>1.2.9</version>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<!-- Spring -->

		<!-- Apache -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		<!-- Apache -->

		<!-- Jackson -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.9.6</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.9.6</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.9.6</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
			<version>2.9.6</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
			<version>2.9.6</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-jsonSchema</artifactId>
			<version>2.9.6</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-swagger</artifactId>
			<version>0.5.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-modules-java8</artifactId>
			<version>2.9.6</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-csv</artifactId>
			<version>2.9.6</version>
		</dependency>
		<dependency>
			<groupId>org.lightcouch</groupId>
			<artifactId>lightcouch</artifactId>
			<version>0.2.0</version>
		</dependency>

	</dependencies>

	<build>
		<finalName>E-Invoicer</finalName>
		<plugins>
			<plugin>

				<groupId>com.zenjava</groupId>
				<artifactId>javafx-maven-plugin</artifactId>
				<version>8.4.0</version>
				<configuration>
					<mainClass>${exec.mainClass}</mainClass>

				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<!-- copy all dependencies of your app to target folder -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<configuration>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<outputDirectory>${project.build.directory}</outputDirectory>
						</configuration>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/jar-with-dependencies.xml</descriptor>
					</descriptors>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>${exec.mainClass}</mainClass>
							<classpathLayoutType>repository</classpathLayoutType>

						</manifest>
						<manifestEntries>
							<JavaFX-Application-Class>${exec.mainClass}</JavaFX-Application-Class>
							<Main-Class>${exec.mainClass}</Main-Class>
							<JavaFX-Version>${javafx.version}+</JavaFX-Version>
							<implementation-version>1.0</implementation-version>
							<!-- <JavaFX-Class-Path> </JavaFX-Class-Path> -->
							<!-- The artifactId (name) of the jfxrt.jar ... see dependency system 
								scope -->

							<Class-Path>javafx-${javafx.version}.jar</Class-Path>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<phase>package</phase>
						<configuration>
							<target>
								<!-- define the deploy ANT task -->
								<taskdef name="jfxdeploy" classname="com.sun.javafx.tools.ant.DeployFXTask"
									classpathref="maven.plugin.classpath" />
								<!-- define the JarSing ANT task -->
								<taskdef name="jfxsignjar" classname="com.sun.javafx.tools.ant.FXSignJarTask"
									classpathref="maven.plugin.classpath" />

								<jfxdeploy width="1024" height="768"
									outdir="${project.build.directory}/deploy" outfile="${project.build.finalName}"
									nativeBundles="all">
									<info title="${project.name}" />
									<application name="${project.name}" mainClass="${exec.mainClass}" />
									<resources>
										<fileset dir="${project.build.directory}" includes="*.jar" />
										<!-- <fileset dir="${project.build.directory}/dependency" includes="*.jar" 
											/> -->
									</resources>
									<!-- set your jvm args -->
									<platform javafx="${javafx.version}+">
										<jvmarg value="-Xms512m" />
										<jvmarg value="-Xmx1024m" />
									</platform>
								</jfxdeploy>

								<!-- you need to generate a key yourself <jfxsignjar destdir="${project.build.directory}/deploy" 
									keyStore="${basedir}/src/main/resources/keystore/javafx.ks" storePass="123456" 
									alias="javafx" keyPass="123456"> <fileset dir="${project.build.directory}/deploy" 
									includes="*.jar" /> </jfxsignjar> -->

							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>javafx</groupId>
						<artifactId>ant-javafx</artifactId>
						<version>${javafx.version}</version>
						<systemPath>${java.home}\..\lib\ant-javafx.jar</systemPath>
						<scope>system</scope>
					</dependency>
					<dependency>
						<groupId>javafx</groupId>
						<artifactId>jfxrt</artifactId>
						<version>${javafx.version}</version>
						<systemPath>${java.home}\lib\ext\jfxrt.jar</systemPath>
						<scope>system</scope>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>
</project>


